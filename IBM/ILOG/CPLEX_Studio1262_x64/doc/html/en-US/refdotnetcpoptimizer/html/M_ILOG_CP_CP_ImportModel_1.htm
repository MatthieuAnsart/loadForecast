<html xml:lang="en" lang="en" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>ImportModel Method (String)</title>
    <meta name="Language" content="en-us" />
    <meta name="Microsoft.Help.Id" content="M:ILOG.CP.CP.ImportModel(System.String)" />
    <meta name="Description" content="Imports model from a file." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <link rel="stylesheet" type="text/css" href="../styles/Presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"> </script>
    <meta name="container" content="ILOG.CP" />
    <meta name="file" content="M_ILOG_CP_CP_ImportModel_1" />
    <meta name="guid" content="M_ILOG_CP_CP_ImportModel_1" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="M:ILOG.CP.CP.ImportModel(System.String)" />
      <MSHelp:TOCTitle Title="ImportModel Method (String)" />
      <MSHelp:RLTitle Title="CP.ImportModel Method (String) (ILOG.CP)" />
      <MSHelp:Keyword Index="A" Term="M:ILOG.CP.CP.ImportModel(System.String)" />
      <MSHelp:Attr Name="APIType" Value="Managed" />
      <MSHelp:Attr Name="APILocation" Value="ILOG.CP.dll" />
      <MSHelp:Attr Name="APIName" Value="ILOG.CP.CP.ImportModel" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLang" Value="VB" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="Abstract" Value="Imports model from a file." />
      <MSHelp:Attr Name="AssemblyVersion" Value="12.6.2.0" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="CollapseAll image" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="ExpandAll image" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" alt="DropDown image" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" alt="DropDownHover image" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">CP Optimizer .NET Languages API</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">CP<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ImportModel Method (String)</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="T_ILOG_CP_CP.htm">CP Class</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('','CP Optimizer .NET Languages API','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');"></a></span></td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <span style="color: DarkGray"></span>
        <div class="summary">
             Imports model from a file.
             </div>
        <p />
        <b>Namespace:</b> <a href="N_ILOG_CP.htm">ILOG.CP</a><br /><b>Assembly:</b> <span sdata="assembly">ILOG.CP</span> (in ILOG.CP.dll)<h1 class="heading">Syntax</h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="identifier">ImportModel</span>(
	<span class="nolink">string</span> <span class="parameter">filename</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Overridable</span> <span class="keyword">Sub</span> <span class="identifier">ImportModel</span> ( _
	<span class="parameter">filename</span> <span class="keyword">As</span> <span class="nolink">String</span> _
)</pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="filename"><dt><span class="parameter">filename</span></dt><dd>Type: <span class="nolink">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>String</span><br /></dd></dl></div></div><h1 class="heading">Remarks</h1><div id="remarksSection" class="section" name="collapseableSection" style=""><p> This function reads a model from a file specified by the
                 <span class="code">filename</span> parameter. The file must have extension
                 <span class="code">.cpo</span> and follow the syntax described in
                 the CP Optimizer File Format Reference Manual.
             </p><p> Before reading the file, the function first discards any model that
                 was used before.
             </p><p> If an error happens while reading the file then the error
                 messages are written into the stream defined by
                 <span class="code"><a href="M_ILOG_CP_CP_SetError.htm">SetError(TextWriter)</a></span> and the
                 function throws an instance of
                 <span class="code"><span class="nolink">[!:IloException]</span></span>.
             </p><p> This function cannot be called during the search.
             </p><p> After reading the model, it is possible to access some model objects
                 (especially variables) using the functions
                 <span class="code"><a href="M_ILOG_CP_CP_GetAllIIntVars.htm">GetAllIIntVars<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></span>,
                 <span class="code"><a href="M_ILOG_CP_CP_GetAllIIntervalVars.htm">GetAllIIntervalVars<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></span>,
                 <span class="code"><a href="M_ILOG_CP_CP_GetAllIIntervalSequenceVars.htm">GetAllIIntervalSequenceVars<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></span>,
                 <span class="code"><a href="M_ILOG_CP_CP_GetAllIStateFunctions.htm">GetAllIStateFunctions<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></span> and
                 <span class="code"><a href="M_ILOG_CP_CP_GetAllConstrainedICumulFunctionExprs.htm">GetAllConstrainedICumulFunctionExprs<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></span>.
                 It is also possible to access modeling objects by name using functions
                 <span class="code"><a href="M_ILOG_CP_CP_GetIIntVar.htm">GetIIntVar(String)</a></span>,
                 <span class="code"><a href="M_ILOG_CP_CP_GetIIntervalVar.htm">GetIIntervalVar(String)</a></span>,
                 <span class="code"><a href="M_ILOG_CP_CP_GetIIntervalSequenceVar.htm">GetIIntervalSequenceVar(String)</a></span>,
                 <span class="code"><a href="M_ILOG_CP_CP_GetIStateFunction.htm">GetIStateFunction(String)</a></span> and
                 <span class="code"><a href="M_ILOG_CP_CP_GetICumulFunctionExpr.htm">GetICumulFunctionExpr(String)</a></span>.
             </p><p> Once the model is loaded it is possible to modify domains of the model
                 variables but otherwise the model cannot be changed.
             </p><p> For example, lets assume that there is a file <span class="code">colors.cpo</span>
                 with the following content (model of a map coloring problem):
             </p><pre>
                // Decision variables:
                Belgium = intVar(1..4);
                Denmark = intVar(1..4);
                France = intVar(1..4);
                Germany = intVar(1..4);
                Luxembourg = intVar(1..4);
                Netherlands = intVar(1..4);
            
                // Constraints:
                Belgium != France;
                Belgium != Germany;
                Belgium != Netherlands;
                Belgium != Luxembourg;
                Denmark != Germany;
                France != Germany;
                France != Luxembourg;
                Germany != Luxembourg;
                Germany != Netherlands;
            
                parameters {
                  SearchType = DepthFirst;
                }
             </pre><p> The following code reads the model from the file, modifies domain of
                 variable <span class="code">France</span>, solves it and prints the solution.
             </p><h1 class="heading">Examples</h1><div id="exampleSection" class="section" name="collapseableSection" style=""><span class="code">
               CP cp = new CP();
               cp.ImportModel("color.cpo");
               IIntVar varFrance = cp.GetIIntVar("France");
               varFrance.Min = 4;
               cp.Solve();
               Console.WriteLine("Belgium: "     + cp.GetValue("Belgium"));
               Console.WriteLine("Denmark: "     + cp.GetValue("Denmark"));
               Console.WriteLine("France: "      + cp.GetValue("France"));
               Console.WriteLine("Germany: "     + cp.GetValue("Germany"));
               Console.WriteLine("Luxembourg: "  + cp.GetValue("Luxembourg"));
               Console.WriteLine("Netherlands: " + cp.GetValue("Netherlands"));
             </span></div></div><h1 class="heading">See Also</h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="T_ILOG_CP_CP.htm">CP Class</a></div><div class="seeAlsoStyle"><a href="Overload_ILOG_CP_CP_ImportModel.htm">ImportModel Overload</a></div><div class="seeAlsoStyle"><a href="N_ILOG_CP.htm">ILOG.CP Namespace</a></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
        </div>
        <A NAME="feedback"></A>
        <span id="fb" class="feedbackcss"></span>
        <p />© Copyright IBM Corp. 1987, 2014</div>
    </div>
  </body>
</html>