<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>RefineConflict Method (IConstraint[], Double[])</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/Dropdown.js"> </script><script type="text/javascript" src="../scripts/script_manifold.js"> </script><script type="text/javascript" src="../scripts/script_feedBack.js"> </script><script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script><script type="text/javascript" src="../scripts/CommonUtilities.js"> </script><meta name="container" content="ILOG.CPLEX" /><meta name="file" content="M_ILOG_CPLEX_Cplex_RefineConflict" /><meta name="guid" content="M_ILOG_CPLEX_Cplex_RefineConflict" /><xml><MSHelp:Attr Name="AssetID" Value="M:ILOG.CPLEX.Cplex.RefineConflict(ILOG.Concert.IConstraint[],System.Double[])" /><MSHelp:TOCTitle Title="RefineConflict Method (IConstraint[], Double[])" /><MSHelp:RLTitle Title="Cplex.RefineConflict Method (IConstraint[], Double[]) (ILOG.CPLEX)" /><MSHelp:Keyword Index="A" Term="M:ILOG.CPLEX.Cplex.RefineConflict(ILOG.Concert.IConstraint[],System.Double[])" /><MSHelp:Attr Name="APIType" Value="Managed" /><MSHelp:Attr Name="APILocation" Value="ILOG.CPLEX.dll" /><MSHelp:Attr Name="APIName" Value="ILOG.CPLEX.Cplex.RefineConflict" /><MSHelp:Attr Name="DevLang" Value="CSharp" /><MSHelp:Attr Name="DevLang" Value="VB" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="Abstract" Value="Refines a conflict from an array of constraints." /><MSHelp:Attr Name="AssemblyVersion" Value="12.6.2.0" /></xml></head><body><input type="hidden" id="userDataCache" class="userDataStyle" /><input type="hidden" id="hiddenScrollOffset" /><img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" title="Collapse image" /><img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" title="Expand Image" /><img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" /><img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" /><img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" /><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" /><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" title="CopyHover image" /><div id="header"><table id="topTable" cellspacing="0" cellpadding="0"><tr><td><span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0"><img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span><span>    </span><span id="devlangsDropdown" class="filter" tabindex="0"><img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label></span></td></tr></table><div id="devlangsMenu"><input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="CSharpCheckbox">C#</label><br /><input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" /><label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label><br /></div><table id="bottomTable" cellpadding="0" cellspacing="0"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText">CPLEX .NET API Reference Manual</span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Cplex<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>RefineConflict Method (<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span>)</span></td></tr><tr id="headerTableRow3"><td align="left"><a href="T_ILOG_CPLEX_Cplex.htm">Cplex Class</a>  <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a>  
  <span id="headfeedbackarea" class="feedbackhead">
      <a href="javascript:SubmitFeedback('','CPLEX .NET API Reference Manual','','','','%0\dYour%20feedback%20is%20used%20to%20improve%20the%20documentation%20and%20the%20product.%20Your%20e-mail%20address%20will%20not%20be%20used%20for%20any%20other%20purpose%20and%20is%20disposed%20of%20after%20the%20issue%20you%20report%20is%20resolved.%20%20While%20working%20to%20resolve%20the%20issue%20that%20you%20report,%20you%20may%20be%20contacted%20via%20e-mail%20to%20get%20further%20details%20or%20clarification%20on%20the%20feedback%20you%20sent.%20After%20the%20issue%20you%20report%20has%20been%20addressed,%20you%20may%20receive%20an%20e-mail%20to%20let%20you%20know%20that%20your%20feedback%20has%20been%20addressed.%0\A%0\d','Customer%20Feedback');">
        
        
      </a>
	</span>
</td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" /><span style="color: DarkGray"> </span><div class="summary">
             Refines a conflict from an array of constraints.
             </div><p />
    <b>Namespace:</b> 
   <a href="N_ILOG_CPLEX.htm">ILOG.CPLEX</a><br />
    <b>Assembly:</b>
   <span sdata="assembly">ILOG.CPLEX</span> (in ILOG.CPLEX.dll)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">virtual</span> <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">bool</a> <span class="identifier">RefineConflict</span>(
	<a href="T_ILOG_Concert_IConstraint.htm">IConstraint</a>[] <span class="parameter">cons</span>,
	<a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">double</a>[] <span class="parameter">prefs</span>
)</pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic (Declaration)</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Overridable</span> <span class="keyword">Function</span> <span class="identifier">RefineConflict</span> ( _
	<span class="parameter">cons</span> <span class="keyword">As</span> <a href="T_ILOG_Concert_IConstraint.htm">IConstraint</a>(), _
	<span class="parameter">prefs</span> <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">Double</a>() _
) <span class="keyword">As</span> <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a></pre></td></tr></table></span></div><div id="parameters"><h4 class="subHeading">Parameters</h4><dl paramName="cons"><dt><span class="parameter">cons</span></dt><dd>Type: <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>
            <a href="T_ILOG_Concert_IConstraint.htm">ILOG.Concert<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>IConstraint</a>
          <span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><br /><p>An array of constraints. They may be <span class="code">IRange</span>
                           or <span class="code">IAnd</span> constructs on a set of ranges.
                           Only constraints directly added to the model can be
                           specified.
                           If a constraint does not appear in this array, the constraint
                           is assigned a default preference value of 0 (zero).
                           As a consequence, such constraints
                           are included in the conflict without any analysis.</p>
             </dd></dl><dl paramName="prefs"><dt><span class="parameter">prefs</span></dt><dd>Type: <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>
            <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span></span>Double</a>
          <span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span></span><br /><p>An array containing the preferences for the
                           groups or constraints.  <span class="code">prefs[i]</span> specifies the
                           preference for the group or constraint <span class="code">i</span>.  A
                           negative value specifies that the corresponding group or
                           constraint should not be considered for
                           finding a conflict.  In other words,
                           such groups are considered not to be part of the
                           model.  Groups with a preference of 0 (zero) are always
                           considered to be part of the conflict.  No further
                           checking is performed on such groups.</p>
            
             </dd></dl></div><h4 class="subHeading">Return Value</h4>A Boolean value reporting whether a conflict has been found.</div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle, event)" tabindex="0"><img id="remarksToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style=""> <p>
             The method <span class="code">refineConflict</span> tries to compute a
             minimal conflict for the infeasibility of the current model or for
             a subset of the constraints of the current model.
             If this computation is successful,
             (that is, it runs to completion; it is not interrupted by the user's
             application nor limited by a user-specified restriction of time or
             other resources), then the conflict can be accessed by means of the
             method <span class="code">getConflict</span> as a minimal set of
             constraints that are still infeasible.  Removal of any of these constraints
             will remove that particular cause for infeasibility.  However, if
             other infeasible sets still exist in the model, then that removal
             from the model of any of the constraints in the returned set
             does <b>not</b> guarantee feasibility of the remaining model.</p>
            
             <p>Constraints can be considered in groups
             organized by <span class="code">IAnd</span> constructed
             with 
              
               <span class="code">IMPModeler.And</span>. 
             If any constraint in a group
             participates in the conflict, the entire group is determined to do so.
             No further detail about the constraints within that group is returned.</p>
            
             <p>A group or constraint may be assigned a preference.  A constraint with a
             higher preference is more likely to be included in the conflict.  However,
             no guarantee is made when a conflict is returned that other infeasible
             sets containing groups or constraints with a higher preference
             may exist.</p>
            
             <p>To check whether the bounds of a variable cause a conflict, use
             instances of the class <span class="code">ILOG.Concert.INumVarBound</span>
             to specify the upper and lower bounds of the variable in question.
             Use those bounds like constraints among the arguments you pass to
             <span class="code">refineConflict</span>.</p>
             <p>
             The parameters <span class="code">CutUp</span>, <span class="code">CutLo</span>,
             <span class="code">ObjULim</span>, <span class="code">ObjLLim</span> do not influence this method.
             If you want to study infeasibilities introduced by those parameters,
             consider adding an objective function constraint to your model to
             enforce their effect before you invoke this method.
             </p>
            
             
            
             </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="T_ILOG_CPLEX_Cplex.htm">Cplex Class</a></div><div class="seeAlsoStyle"><a href="Overload_ILOG_CPLEX_Cplex_RefineConflict.htm">RefineConflict Overload</a></div><div class="seeAlsoStyle"><a href="N_ILOG_CPLEX.htm">ILOG.CPLEX Namespace</a></div></div></div><div id="footer"><div class="footerLine"><img width="100%" height="3px" src="../icons/footer.gif" title="Footer image" /></div><A NAME="feedback"></A><span id="fb" class="feedbackcss" style="display: none;"> </span>
© Copyright IBM Corp. 1987, 2015 </div></div></body></html>