<html xml:lang="en" lang="en" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>Cplex.NodeEvaluator Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="Cplex.NodeEvaluator class" />
    <meta name="System.Keywords" content="ILOG.CPLEX.Cplex.NodeEvaluator class" />
    <meta name="System.Keywords" content="Cplex.NodeEvaluator class, about Cplex.NodeEvaluator class" />
    <meta name="Microsoft.Help.F1" content="ILOG.CPLEX.Cplex.NodeEvaluator" />
    <meta name="Microsoft.Help.Id" content="T:ILOG.CPLEX.Cplex.NodeEvaluator" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <link rel="stylesheet" type="text/css" href="../styles/Presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"> </script>
    <meta name="container" content="ILOG.CPLEX" />
    <meta name="file" content="T_ILOG_CPLEX_Cplex_NodeEvaluator" />
    <meta name="guid" content="T_ILOG_CPLEX_Cplex_NodeEvaluator" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="T:ILOG.CPLEX.Cplex.NodeEvaluator" />
      <MSHelp:TOCTitle Title="Cplex.NodeEvaluator Class" />
      <MSHelp:RLTitle Title="Cplex.NodeEvaluator Class (ILOG.CPLEX)" />
      <MSHelp:Keyword Index="A" Term="T:ILOG.CPLEX.Cplex.NodeEvaluator" />
      <MSHelp:Keyword Index="A" Term="frlrfILOGCPLEXCplexNodeEvaluatorClassTopic" />
      <MSHelp:Keyword Index="K" Term="Cplex.NodeEvaluator class" />
      <MSHelp:Keyword Index="K" Term="ILOG.CPLEX.Cplex.NodeEvaluator class" />
      <MSHelp:Keyword Index="K" Term="Cplex.NodeEvaluator class, about Cplex.NodeEvaluator class" />
      <MSHelp:Keyword Index="F" Term="ILOG.CPLEX.Cplex.NodeEvaluator" />
      <MSHelp:Attr Name="HelpPriority" Value="2" />
      <MSHelp:Attr Name="APIType" Value="Managed" />
      <MSHelp:Attr Name="APILocation" Value="oplall.dll" />
      <MSHelp:Attr Name="APIName" Value="ILOG.CPLEX.NodeEvaluator" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLang" Value="VB" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="AssemblyVersion" Value="12.6.2.0" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="CollapseAll image" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="ExpandAll image" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" alt="DropDown image" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" alt="DropDownHover image" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">OPL API</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">Cplex<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>NodeEvaluator Class</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="T_ILOG_CPLEX_Cplex.htm">Cplex Class</a> <a href="AllMembers_T_ILOG_CPLEX_Cplex_NodeEvaluator.htm">Members</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('','OPL API','','','','%20','Customer%20Feedback');"></a></span></td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <span style="color: DarkGray"></span>
        <p />
        <b>Namespace:</b> <a href="N_ILOG_CPLEX.htm">ILOG.CPLEX</a><br /><b>Assembly:</b> <span sdata="assembly">oplall</span> (in oplall.dll)<h1 class="heading">Syntax</h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">NodeEvaluator</span> : <span class="nolink">ICloneable</span></pre></td></tr></table></span><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">NodeEvaluator</span> _
	<span class="keyword">Implements</span> <span class="nolink">ICloneable</span></pre></td></tr></table></span></div></div><h1 class="heading">Remarks</h1><div id="remarksSection" class="section" name="collapseableSection" style="">Node evaluators can be used to control the node selection strategy during the branch-and-cut search. 
            When <span class="code">Cplex</span> finishes processing a node during branch-and-cut search it chooses a new active node from the tree to process.  
            Node evaluators allow you to implement your own node selection strategy within any subtree controlled by goals. 
            <p> Node evaluators are represented by objects of type <span class="code">Cplex.NodeEvaluator</span>. To create your own node evaluator, 
            you must subclass class <span class="code">Cplex.NodeEvaluator</span> and implement the abstract method <span class="code">evaluate</span>.</p><p> The <span class="code">evaluate</span> method is called by <span class="code">Cplex</span> to compute a value for a given node.  Given two nodes being evaluated 
            by the same evaluator, by default <span class="code">Cplex</span> chooses the node with the lower value.  However, this default behavior can be 
            changed by overriding the method <span class="code">subsume</span>.</p><p> If the default implementation of the method <span class="code">clone</span> is not adequate 
            and the goal is to be used for parallel optimization, this method also needs to be implemented by the user.  
            Recall that the default <span class="code">clone</span> method performs a shallow copy, so typically a user implementation would perform 
            a deep copy for objects that should be local to threads or use the <span class="code">synchronize</span> keyword where synchronization is required. </p><p> The method <span class="code">Cplex.apply</span> is used to impose a node selection strategy defined by a node evaluator on the search controlled by a goal, 
            as shown in this example:</p><p><pre> IloCplex.Goal evalGoal = cplex.apply(goal, nodeEval); </pre></p><p> In this example <span class="code">nodeEval</span> is 
            of type <span class="code">Cplex.NodeEvaluator</span> and <span class="code">goal</span> is of type <span class="code">Cplex.Goal</span>. The method <span class="code">apply</span> creates and returns a new goal that 
            follows the node selection rule defined by <span class="code">nodeEval</span> while performing branch-and-cut search as specified by <span class="code">goal</span>.  In doing so, 
            the node selection strategy defined by <span class="code">nodeEval</span> is active only for the search subtree generated by <span class="code">goal</span>.</p><p> This also means 
            that as soon as the goal stack becomes empty and <span class="code">Cplex</span> proceeds with built-in search strategies, the node selection control via node evaluators 
            is deactivated, and the built-in strategy controlled by parameter <span class="code">Cplex.IntParam.NodeSel</span> is used instead.  In order to maintain control over the 
            node selection via node evaluators while using the <span class="code">Cplex</span> branch strategy, a goal such as:</p><p><pre> class DefaultSearchGoal extends IloCplex.Goal { 
            public IloCplex.Goal execute(IloCplex cplex) throws IloException { if (!isIntegerFeasible()) return cplex.and(cplex.branchAsCplex(), this); return null; } } </pre></p><p> can be used. </p><p> An interesting implication of the correspondence between node evaluators and goals is that you can specify different node selection strategies 
            for different subtrees.  If <span class="code">goal1</span> and <span class="code">goal2</span> define the search in two subtrees of a branch-and-cut search tree, and <span class="code">eval1</span> and <span class="code">eval2</span> define 
            two different node selection schemes, the goal</p><p><span class="code"> cplex.or(cplex.apply(goal1, eval1), cplex.apply(goal2, eval2)); </span></p><p> will put the subtree defined by 
            <span class="code">goal1</span> under the node selection strategy of <span class="code">eval1</span> and the subtree defined by <span class="code">goal2</span> under the node selection strategy of <span class="code">eval2</span>. </p><p> To better understand how multiple node evaluators are handled, consider this additional information about the management of evaluators.  When an evaluator 
            is applied to a goal, the evaluator is attached to every node that will be created by that goal.  This not only includes the nodes created by the <span class="code">execute</span> 
            method of the goal itself, but also those created by the goal returned by the <span class="code">execute</span> method and so on.  Since the <span class="code">execute</span> method of a goal may create 
            and return goals with other evaluators applied to them, every node may have a list of evaluators attached to it.  The order of evaluators is the order in which 
            the evaluators have been applied.</p><p> Each evaluator computes a value for every node it is attached to by calling the method <span class="code">evaluate</span>. This method is 
            called only once for a node and the result is stored.  If a node evaluates to <span class="code">Double.MAX_VALUE</span> (by means of an evaluator's method <span class="code">evaluate</span>), 
            the node is pruned from the tree, or, in other words, the node is removed from the tree along with the entire subtree that otherwise might have been generated from it.</p><p> When <span class="code">Cplex</span> chooses the next node to be processed it starts out with a candidate proposed by the built-in node selection strategy. There is a variety of such strategies 
            that can be chosen with parameter <span class="code">Cplex.IntParam.NodeSel</span>.</p><p> After choosing an initial candidate node, <span class="code">Cplex</span> goes through the list of remaining nodes in 
            the branch-and-cut tree to see if a node evaluator overrules this decision.  Thus, for each active node <span class="code">Cplex</span> checks all the evaluators it has in common with 
            the current candidate.  By default, if a common evaluator computed a lower number for a node than for the current candidate, that node is used as a new candidate.  
            However, by overriding the <span class="code">subsume</span> method, a different overruling criterion can be implemented.  The evaluators are checked in the order they are listed in 
            the candidate node. This operation is repeated until all nodes have been checked.  The candidate that survives this process will be chosen as the node to be processed 
            for branch-and-cut search.</p></div><h1 class="heading">Inheritance Hierarchy</h1><div id="familySection" class="section" name="collapseableSection" style=""><span class="nolink">System<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Object</span><br />  <span class="selflink">ILOG.CPLEX<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>Cplex<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>NodeEvaluator</span><br /></div><h1 class="heading">See Also</h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="AllMembers_T_ILOG_CPLEX_Cplex_NodeEvaluator.htm">Cplex<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>NodeEvaluator Members</a></div><div class="seeAlsoStyle"><a href="N_ILOG_CPLEX.htm">ILOG.CPLEX Namespace</a></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
        </div>
        <A NAME="feedback"></A>
        <span id="fb" class="feedbackcss"></span>
        <p />© Copyright IBM Corp. 1987, 2015</div>
    </div>
  </body>
</html>