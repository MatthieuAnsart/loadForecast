<html xml:lang="en" lang="en" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>IMPModeler Methods</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="IMPModeler interface, methods" />
    <meta name="Microsoft.Help.Id" content="Methods.T:ILOG.Concert.IMPModeler" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <link rel="stylesheet" type="text/css" href="../styles/Presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"> </script>
    <meta name="container" content="ILOG.Concert" />
    <meta name="file" content="Methods_T_ILOG_Concert_IMPModeler" />
    <meta name="guid" content="Methods_T_ILOG_Concert_IMPModeler" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="Methods.T:ILOG.Concert.IMPModeler" />
      <MSHelp:TOCTitle Title="IMPModeler Methods" />
      <MSHelp:RLTitle Title="IMPModeler Methods (ILOG.Concert)" />
      <MSHelp:Keyword Index="A" Term="Methods.T:ILOG.Concert.IMPModeler" />
      <MSHelp:Keyword Index="A" Term="frlrfILOGConcertIMPModelerMethodsTopic" />
      <MSHelp:Keyword Index="K" Term="IMPModeler interface, methods" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLang" Value="VB" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="AssemblyVersion" Value="12.6.2.0" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="CollapseAll image" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="ExpandAll image" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" alt="DropDown image" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" alt="DropDownHover image" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">OPL API</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">IMPModeler Methods</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="T_ILOG_Concert_IMPModeler.htm">IMPModeler Interface</a> <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> <span id="headfeedbackarea" class="feedbackhead"><a href="javascript:SubmitFeedback('','OPL API','','','','%20','Customer%20Feedback');"></a></span></td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <span style="color: DarkGray"></span>
        <p>The <a href="T_ILOG_Concert_IMPModeler.htm">IMPModeler</a> type exposes the following members.</p>
        <h1 class="heading">Methods</h1>
        <div id="methodTableSection" class="section" name="collapseableSection" style="">
          <table id="memberList" class="members" frame="lhs" cellpadding="2">
            <col width="10%" />
            <tr>
              <th class="iconColumn">
               
            </th>
              <th class="nameColumn">Name</th>
              <th class="descriptionColumn">Description</th>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Abs.htm">Abs(IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">abs(e)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Abs.htm">Abs(INumExpr)</a>
              </td>
              <td>
                <div class="summary">
            Returns an expression representing the absolute value of its argument, 
            the expression indicated by <span class="code">expr</span>.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModel_Add.htm">Add(IAddable)</a>
              </td>
              <td>
                <div class="summary">
             This method adds the extractable object to the invoking
             model.
             </div> (Inherited from <a href="T_ILOG_Concert_IModel.htm">IModel</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModel_Add_1.htm">Add(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IAddable<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             This method adds the array of extractable objects to the invoking
             model.
             </div> (Inherited from <a href="T_ILOG_Concert_IModel.htm">IModel</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModel_Add_2.htm">Add(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IAddable<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
             This method adds modeling objects to the invoking <span class="code">IModel</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModel.htm">IModel</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddEq_4.htm">AddEq(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">val == expr</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddEq.htm">AddEq(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 == e2</span>, 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddEq_2.htm">AddEq(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">expr == rhs</span>,
              and added to the invoking <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddEq_5.htm">AddEq(Double, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of  <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">val == expr</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddEq_1.htm">AddEq(INumExpr, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 == e2</span>, 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddEq_3.htm">AddEq(INumExpr, Double, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">expr == rhs</span>,
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddGe_4.htm">AddGe(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">val &gt;= expr</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddGe.htm">AddGe(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 &gt;= e2</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddGe_2.htm">AddGe(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">expr &gt;= rhs</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddGe_5.htm">AddGe(Double, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">val &gt;= expr</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddGe_1.htm">AddGe(INumExpr, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 &gt;= e2</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddGe_3.htm">AddGe(INumExpr, Double, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">expr &gt;= rhs</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddLe_4.htm">AddLe(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">val &lt;= expr</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddLe.htm">AddLe(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 &lt;= e2</span>, 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddLe_2.htm">AddLe(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">expr &lt;= rhs</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddLe_5.htm">AddLe(Double, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span>
              initialized to represent the constraint <span class="code">val &lt;= expr</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddLe_1.htm">AddLe(INumExpr, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 &lt;= e2</span>  
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddLe_3.htm">AddLe(INumExpr, Double, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">expr &lt;= rhs</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddLPMatrix.htm">AddLPMatrix<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">Creates, returns, and adds to the invoking model an empty <span class="code">ILPMatrix</span> object.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddLPMatrix_1.htm">AddLPMatrix(String)</a>
              </td>
              <td>
                <div class="summary">
            Creates, returns, and adds an empty <span class="code">ILPMatrix</span> object,
            with the specified name, to the invoking model.
            
            <p>
            The new <span class="code">ILPMatrix</span> object is initialized to
            <span class="code">0</span> columns and <span class="code">0</span> rows. It can be populated later
            using the <span class="code">ILPMatrix</span> manipulation API.  The new
            <span class="code">ILPMatrix</span> object is added to the invoking
            <span class="code">IMPModeler</span> model.  
            The new <span class="code">ILPMatrix</span> object is
            assigned <span class="code">name</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddMaximize.htm">AddMaximize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">Creates and returns an empty maximization objective function.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddMaximize_1.htm">AddMaximize(String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an empty maximization objective function.
             This method creates and returns an <span class="code">IObjective</span> object
             representing a maximization objective function with a zero expression.
             The new <span class="code">IObjective</span> object is assigned 
             <span class="code">name</span> as its name 
             and added to the invoking <span class="code">IModel</span>. This method 
             is typically used in an application that applies column-wise modeling to
             fill in the objective function while creating the variables.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddMaximize.htm">AddMaximize(INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to maximize the expression <span class="code">expr</span> 
              and added to the invoking model.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddMaximize_1.htm">AddMaximize(INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span>,  
              representing an objective to maximize the expression <span class="code">expr</span>, 
              assigned the name <span class="code">name</span>, and added to the invoking model.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddMinimize.htm">AddMinimize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">Creates and returns an empty minimization objective function.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddMinimize_1.htm">AddMinimize(String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an empty minimization objective function.
            This method creates and returns an <span class="code">IObjective</span> object
            representing a minimization objective function with a zero expression.
            The new <span class="code">IObjective</span> object is assigned the name
            <span class="code">name</span> and added to the invoking <span class="code">IModel</span>.
            This method is typically used in an application that applies column-wise
            modeling to fill in the objective function while creating the variables.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddMinimize.htm">AddMinimize(INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to minimize the expression <span class="code">expr</span> 
              and added to the invoking model.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddMinimize_1.htm">AddMinimize(INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to minimize the expression <span class="code">expr</span>, 
              assigned the name <span class="code">name</span>, and added to the invoking model.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddObjective.htm">AddObjective(ObjectiveSense)</a>
              </td>
              <td>
                <div class="summary">
             Creates, returns, and adds to the invoking model 
            an empty objective function with the sense 
            specified by <span class="code">sense</span>.
            <p>
            This method creates and returns an <span class="code">IObjective</span> object with
             a zero expression and the specified optimization sense.  The new
            <span class="code">IObjective</span> object is added to the invoking
            <span class="code">IModel</span>. This method is typically used in an application
             that applies column-wise modeling to fill in the objective function while
            creating the variables.
             </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddObjective.htm">AddObjective(ObjectiveSense, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to optimize the expression 
              <span class="code">expr</span> with respect to the optimization sense 
              indicated by <span class="code">sense</span>  and added to the invoking model.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddObjective_1.htm">AddObjective(ObjectiveSense, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates, returns, and adds to the invoking model
            an empty objective function with the name
            specified by <span class="code">name</span> and with the sense specified by
            <span class="code">sense</span>.</div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddObjective_1.htm">AddObjective(ObjectiveSense, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to optimize the expression <span class="code">expr</span> 
              with respect to the optimization sense indicated by <span class="code">sense</span>,
              assigned the name <span class="code">name</span>, and 
              added to the invoking model.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddRange.htm">AddRange(Double, Double)</a>
              </td>
              <td>
                <div class="summary">Creates, returns, and adds to the invoking model an empty <span class="code">IRange</span> object.</div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddRange.htm">AddRange(Double, INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint 
              <span class="code">lb &lt;= expr &lt;= ub</span> 
              and added to the invoking instance of 
              <span class="code">lb &lt;= expr &lt;= ub</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddRange_1.htm">AddRange(Double, Double, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates, returns, and adds to the invoking model
            an empty <span class="code">IRange</span> object with the name specified
            by <span class="code">name</span>. </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_AddRange_1.htm">AddRange(Double, INumExpr, Double, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint 
              <span class="code">lb &lt;= expr &lt;= ub</span> 
              and added to the invoking instance of <span class="code">IModel</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddSOS1.htm">AddSOS1(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 1 with the specified variables and weights
            and adds it to the invoking model.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddSOS1_3.htm">AddSOS1(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, String)</a>
              </td>
              <td>
                <div class="summary">
             Creates an SOS of type 1 with the specified variables, weights,
             and name, and adds the SOS to the invoking model.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddSOS1_1.htm">AddSOS1(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 1 with <span class="code">num</span> of 
            the specified variables and weights, 
            starting from the index specified by <span class="code">start</span>,
            and adds the SOS to the invoking <span class="code">IModel</span> model.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddSOS1_2.htm">AddSOS1(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 1 with the <span class="code">num</span> 
            specified variables, weights, and names, starting from the index
            specified by <span class="code">start</span>, and adds the SOS to the invoking mode. 
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddSOS2.htm">AddSOS2(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 2 with the specified variables and weights. 
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddSOS2_3.htm">AddSOS2(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 2 with the specified variables and weights, and
            assigns the new SOS its <span class="code">name</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddSOS2_1.htm">AddSOS2(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 2 with the <span class="code">num</span> 
            specified variables and weights, starting from the index specified
            by <span class="code">start</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddSOS2_2.htm">AddSOS2(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 2 with the <span class="code">num</span> 
            specified variables and weights, starting from the index specified by
            <span class="code">start</span>, and assigns 
            the new SOS its <span class="code">name</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddToExpr.htm">AddToExpr(IObjective, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
            Adds an expression term to the expression of the specified
            <span class="code">IObjective</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_AddToExpr_1.htm">AddToExpr(IRange, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
            Adds an expression term to the expression of the specified
            <span class="code">IRange</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_And.htm">And<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_And_3.htm">And(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             Groups several constraints together.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_And_1.htm">And(IConstraint, IConstraint)</a>
              </td>
              <td>
                <div class="summary">
             Group several constraints together.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_And_6.htm">And(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, String)</a>
              </td>
              <td>
                <div class="summary">
             Groups several constraints together.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_And_2.htm">And(IConstraint, IConstraint, String)</a>
              </td>
              <td>
                <div class="summary">
             Group several constraints together.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_And_4.htm">And(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
             Groups several constraints together.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_And_5.htm">And(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32, String)</a>
              </td>
              <td>
                <div class="summary">
             Groups several constraints together.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_BoolVar.htm">BoolVar<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">
             Creates and returns a new Boolean variable (domain 0,1).
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_BoolVar_1.htm">BoolVar(String)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns a new Boolean variable (domain 0,1)
             with its name.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_BoolVar.htm">BoolVar(IColumn)</a>
              </td>
              <td>
                <div class="summary">
            Creates a new Boolean (or binary) modeling variable for column-wise
            modeling.  
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_BoolVar_1.htm">BoolVar(IColumn, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates a new Boolean (or binary) modeling variable, with
            the specified name, for column-wise modeling.  </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_BoolVarArray.htm">BoolVarArray(Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an array of <span class="code">n</span> 
            new Boolean variables (domain 0,1).
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_BoolVarArray.htm">BoolVarArray(IColumnArray)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an array of Boolean (or binary) 
            modeling variables for column-wise modeling.</div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_BoolVarArray_1.htm">BoolVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an array of <span class="code">n</span> 
            new Boolean variables (domain 0,1).
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_BoolVarArray_1.htm">BoolVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates a new Boolean (or binary) modeling variable, with
            the specified name, for column-wise modeling.  
            <p>
            This method returns an object representing a new modeling
            variable of type <span class="code">INumVarType.Bool</span> with the specified
            name.  The newly created variable is then installed in existing
            modeling objects as defined by the <span class="code">IColumn</span> argument
            <span class="code">column</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Column.htm">Column(ILPMatrix)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumn</span> object suitable for adding a new
            variable to an LP matrix as an empty column.  Note, that the column of
            the LP matrix is only created when creating a variable with the returned
            <span class="code">IColumn</span> object but not when calling this method.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Column_3.htm">Column(IObjective, Double)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumn</span> object suitable for adding a new
            variable to the objective <span class="code">obj</span> as a linear term with
            coefficient <span class="code">val</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Column_4.htm">Column(IRange, Double)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumn</span> object suitable for adding a new
            variable to
            constraint <span class="code">rng</span> as a linear term with coefficient
            <span class="code">val</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Column_1.htm">Column(ILPMatrix, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumn</span> object suitable for adding a new
            variable to an LP matrix as a new column.  Note, that the column of the
            LP matrix is only created when creating a variable with the returned
            <span class="code">IColumn</span> object but not when calling this method.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Column_2.htm">Column(ILPMatrix, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumn</span> object suitable for adding a new
            variable to an LP matrix as a new column.  Note, that the column of the
            LP matrix is only created when creating a variable with the returned
            <span class="code">IColumn</span> object but not when calling this method.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_ColumnArray.htm">ColumnArray(ILPMatrix, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumnArray</span> object suitable for adding new
            variables to an <span class="code">ILPMatrix</span> as empty columns.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_ColumnArray_2.htm">ColumnArray(IObjective, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumn</span> object suitable for adding a new
            variable to the objective <span class="code">obj</span> as a linear term with
            coefficient <span class="code">val</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_ColumnArray_4.htm">ColumnArray(IRange, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumn</span> object suitable for adding a new
            variable to
            constraint <span class="code">rng</span> as a linear term with coefficient
            <span class="code">val</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_ColumnArray_1.htm">ColumnArray(ILPMatrix, Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span><span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span><span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span><span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span><span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumn</span> object suitable for adding a new
            variable to an LP matrix as a new column.  Note, that the column of the
            LP matrix is only created when creating a variable with the returned
            <span class="code">IColumn</span> object but not when calling this method.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_ColumnArray_3.htm">ColumnArray(IObjective, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumnArray</span> object suitable for adding
            <span class="code">num</span> new variables to the objective <span class="code">obj</span> as
            linear terms with coefficients specified in <span class="code">val</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_ColumnArray_5.htm">ColumnArray(IRange, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IColumnArray</span> suitable for adding
            <span class="code">num</span> new variables to constraint <span class="code">IRange</span> as
            linear terms with coefficients specified in <span class="code">val</span>.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Constant.htm">Constant(Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the 
            constant term <span class="code">x</span>.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Constant_1.htm">Constant(Int32)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns a new constant expression equal to
             <span class="code">x</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Conversion.htm">Conversion(INumVar, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an <span class="code">IConversion</span> object for converting
            the type of a variable in a model.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Conversion_2.htm">Conversion(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an <span class="code">IConversion</span> object for converting
            the type of the variables in array <span class="code">var</span> in a model.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Conversion_4.htm">Conversion(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an <span class="code">IConversion</span> object for converting
            the type of the variables in the array <span class="code">var</span> in a model.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Conversion_1.htm">Conversion(INumVar, NumVarType, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an <span class="code">IConversion</span> object, with
            the specified name, for converting the type of a variable in a model.  
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Conversion_3.htm">Conversion(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, NumVarType, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an <span class="code">IConversion</span> object with
            the specified type and name, for converting
            the type of the variables in array <span class="code">var</span> in a model.  
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Conversion_5.htm">Conversion(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an <span class="code">IConversion</span> object,
            with the specified name, for converting
            the type of the variables in array <span class="code">var</span> in a model.  
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Delete.htm">Delete(ICopyable)</a>
              </td>
              <td>
                <div class="summary">
            Deletes an object from a model.
            <p>After you call this method, the modeling object <span class="code">obj</span> is no
            longer in the model. If the modeling object is referenced multiple
            times in a model (for example, a variable used by multiple constraints), 
            then that object is removed from all places.  In particular, 
            when you delete a variable from a
            model, the variable is removed from all the other modeling objects in the
            model. Modeling objects that are variables are not of type
            <span class="code">IAddable</span>. In fact, the type of the removed object is
            <span class="code">ICopyable</span>, a common base interface of both
            <span class="code">IAddable</span> and <span class="code">INumVar</span>.</p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Delete_1.htm">Delete(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>ICopyable<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
                  <p>Deletes the modeling objects in an array <span class="code">obj</span> from the
            invoking <span class="code">IModel</span>. After you call this method, the
            deleted objects are no longer in the model. If a modeling object is
            referenced multiple times in a model (for example, a variable used by
            multiple constraints), the object is removed from all places.  
            When you delete
            variables from a model, they are removed from all other modeling
            objects in the model.</p>
                </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Delete_2.htm">Delete(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>ICopyable<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Deletes the modeling objects in <span class="code">obj[start]</span> through
            <span class="code">obj[start+num-1]</span> from a model. Modeling objects
            <span class="code">obj[start]</span> through <span class="code">obj[start+num-1]</span> are
            deleted from the invoking instance of <span class="code">IModel</span>.  
            After you call this
            method, the deleted objects will no longer be in the model.  If a
            modeling object is referenced multiple times in a model 
            (for example, a variable used by multiple constraints), 
            the object is removed from all places.  Thus,
            when you delete variables from a model, they are removed from all
            other modeling objects in the model.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Diff_4.htm">Diff(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the difference 
             between the value
             <span class="code">v</span> and the expression <span class="code">e1</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Diff_5.htm">Diff(Int32, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an integer expression representing the difference
             between the value <span class="code">v</span> and the integer expression <span class="code">e1</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Diff.htm">Diff(IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an integer expression representing the difference
             between the integer expressions <span class="code">expr1</span> 
             and <span class="code">expr2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Diff_1.htm">Diff(IIntExpr, Int32)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an integer expression representing the difference
             between integer expression <span class="code">e</span> and value <span class="code">v</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Diff_2.htm">Diff(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the difference 
             between the expressions
             <span class="code">e1</span> and <span class="code">e2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Diff_3.htm">Diff(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the 
             difference between expression
             <span class="code">e</span> and value <span class="code">v</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Eq_4.htm">Eq(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IRange</span> 
             initialized to represent the constraint <span class="code">val == expr</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Eq.htm">Eq(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IConstraint</span>  
             initialized to represent the constraint <span class="code">e1 == e2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Eq_2.htm">Eq(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IRange</span> 
             initialized to represent the constraint <span class="code">expr == rhs</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Eq_5.htm">Eq(Double, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">val == expr</span>
              and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Eq_1.htm">Eq(INumExpr, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 == e2</span> and 
              assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Eq_3.htm">Eq(INumExpr, Double, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">expr == rhs</span>
              and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Ge_4.htm">Ge(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IRange</span> 
             initialized to represent the constraint <span class="code">val &gt;= expr</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Ge.htm">Ge(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an <span class="code">IRange</span> 
             initialized to represent the constraint <span class="code">e1 &gt;= e2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Ge_2.htm">Ge(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IRange</span> 
             initialized to represent the constraint <span class="code">expr &gt;= rhs</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Ge_5.htm">Ge(Double, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">val &gt;= expr</span>
              and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Ge_1.htm">Ge(INumExpr, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 &gt;= e2</span>
              and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Ge_3.htm">Ge(INumExpr, Double, String)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IRange</span> 
             initialized to represent the constraint <span class="code">expr &gt;= rhs</span>
             and assigned the name <span class="code">name</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModel_GetEnumerator.htm">GetEnumerator</a>
              </td>
              <td>
                <div class="summary">
             This method returns an enumerator that traverses the objects in
             the model.
             </div> (Inherited from <a href="T_ILOG_Concert_IModel.htm">IModel</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IfThen.htm">IfThen(IConstraint, IConstraint)</a>
              </td>
              <td>
                <div class="summary">
             Returns a constraint that if <span class="code">con1</span> is true, then 
             <span class="code">con2</span> must also be true.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IfThen_1.htm">IfThen(IConstraint, IConstraint, String)</a>
              </td>
              <td>
                <div class="summary">
             Returns a constraint that if <span class="code">con1</span> is true, then 
             <span class="code">con2</span> must also be true.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IntExpr.htm">IntExpr</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an empty expression as an object.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IntVar.htm">IntVar(Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a new integer variable with the specified bounds.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IntVar_1.htm">IntVar(Int32, Int32, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a new integer variable with the specified bounds
              and a name.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_IntVar.htm">IntVar(IColumn, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an integer modeling variable, with specified upper and lower
            bound, for column-wise modeling. </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_IntVar_1.htm">IntVar(IColumn, Int32, Int32, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates an integer modeling variable with specified
            upper bound, lower bound, and name for column-wise modeling.  
            <p>
            This
            method returns an object representing a new modeling variable of type
            <span class="code">INumVarType.Int</span> with the specified bounds and name. The
            newly created variable is then installed in existing modeling objects as
            defined by the <span class="code">IColumn</span> argument <span class="code">column</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IntVarArray.htm">IntVarArray(Int32, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
              Returns a new array of <span class="code">n</span> integer variables
              with the specified bounds.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IntVarArray_2.htm">IntVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates an array of length <span class="code">n</span> 
              initialized to <span class="code">n</span> new integer variables,
              each variable with its own bounds.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_IntVarArray.htm">IntVarArray(IColumnArray, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns integer modeling variables,
            all with the same upper bound and with the same lower bound,
            for column-wise modeling.
            
            <p>
            This method creates new modeling variables of type
            <span class="code">INumVarType.Int</span>, each with the same specified bounds, and
            returns them in an array.  The number of new variables is determined by
            the size of the <span class="code">IColumnArray</span> argument <span class="code">cols</span>.
            The new variables are then installed in  existing modeling objects as
            defined by the <span class="code">IColumnArray</span> argument <span class="code">cols</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_IntVarArray_2.htm">IntVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns integer modeling variables,
            with individually specified upper bound, lower bound, and name,
            for column-wise modeling.
            <p>
            This method creates new modeling variables of type
            <span class="code">INumVarType.Int</span>, each with its own bounds, and returns
            them in an array.  The number of new variables is determined by the size
            of the <span class="code">IColumnArray</span> argument <span class="code">cols</span>. Variable
            <span class="code">i</span> is constructed with bounds <span class="code">lb[i]</span> and
            <span class="code">ub[i]</span>.  The new variables are installed in existing
            modeling objects as defined by the <span class="code">cols</span> argument.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IntVarArray_1.htm">IntVarArray(Int32, Int32, Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates an array of length <span class="code">n</span> initialized 
              to <span class="code">n</span> new modeling integer
              variables, each with the same specified bounds
              and returns them in an array.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_IntVarArray_3.htm">IntVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates an array of length <span class="code">n</span> 
              initialized to <span class="code">n</span> new integer variables,
              each variable with its own bounds.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_IntVarArray_1.htm">IntVarArray(IColumnArray, Int32, Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns integer modeling variables, all with the same
            specified upper bound and lower bound, with individually specified
            names, for column-wise modeling.
            
            <p>
            This method creates new modeling variables of type
            <span class="code">INumVarType.Int</span>, each with the same specified bounds, and
            returns them in an array.  The number of new variables is determined by
            the size of the <span class="code">IColumnArray</span> argument <span class="code">cols</span>.
            Each new variable is assigned a separate name, with variable
            <span class="code">i</span> being assigned <span class="code">name[i]</span>. The new variables
            are then installed in existing modeling objects as defined by the
            <span class="code">IColumnArray</span> argument <span class="code">cols</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_IntVarArray_3.htm">IntVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns integer modeling variables, each with individually
            specified upper bound, lower bound, and name, for column-wise modeling.
            
            <p>
            This method creates new modeling variables of type
            <span class="code">INumVarType.Int</span>, each with its own bounds, and returns
            them in an array.  The number of new variables is determined by the size
            of the <span class="code">IColumnArray</span> argument <span class="code">cols</span>. Variable
            <span class="code">i</span> is constructed with bounds <span class="code">lb[i]</span> and
            <span class="code">ub[i]</span> and is assigned <span class="code">name[i]</span>.  The
            new variables are installed in existing modeling objects as defined
            by the <span class="code">cols</span> argument.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Le_4.htm">Le(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IRange</span> 
             initialized to represent the constraint <span class="code">val &lt;= expr</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Le.htm">Le(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IConstraint</span> 
             initialized to represent the constraint <span class="code">e1 &lt;= e2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Le_2.htm">Le(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an instance of <span class="code">IRange</span> 
             initialized to represent the constraint <span class="code">expr &lt;= rhs</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Le_5.htm">Le(Double, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">val &lt;= expr</span>
              and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Le_1.htm">Le(INumExpr, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IConstraint</span> 
              initialized to represent the constraint <span class="code">e1 &lt;= e2</span>
              and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Le_3.htm">Le(INumExpr, Double, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint <span class="code">expr &lt;= rhs</span>
              and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_LinearIntExpr.htm">LinearIntExpr<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a zero integer linear expression.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_LinearIntExpr_1.htm">LinearIntExpr(Int32)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an integer linear expression 
              initialized as a constant.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_LinearNumExpr.htm">LinearNumExpr<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">
             Creates and returns a zero linear expression.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_LinearNumExpr_1.htm">LinearNumExpr(Double)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a linear expression initialized as the constant.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_LPMatrix.htm">LPMatrix<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">Creates and returns an empty <span class="code">ILPMatrix</span> object.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_LPMatrix_1.htm">LPMatrix(String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an empty <span class="code">ILPMatrix</span> object with
            the specified name.
            <p>
            The new <span class="code">ILPMatrix</span> object is initialized to
            0 (zero) columns and 0(zero) rows. It can be populated
            later using the <span class="code">ILPMatrix</span> manipulation API.  The new
            <span class="code">ILPMatrix</span> object is assigned the <span class="code">name</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_ICopyable_MakeClone.htm">MakeClone</a>
              </td>
              <td>
                <div class="summary">
            This method must be implemented so that it copies the invoking object
            to the engine of the given copy manager using the copy manager.
            </div> (Inherited from <a href="T_ILOG_Concert_ICopyable.htm">ICopyable</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Max_2.htm">Max(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntExpr<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">max(e)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Max_5.htm">Max(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumExpr<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">max(e)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Max_6.htm">Max(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">max(val, e2)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Max_7.htm">Max(Int32, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">max(val, e2)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Max.htm">Max(IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">max(e1, e2)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Max_1.htm">Max(IIntExpr, Int32)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">max(e1, val)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Max_3.htm">Max(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">max(e1, e2)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Max_4.htm">Max(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">max(e1, val)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Maximize.htm">Maximize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">Creates and returns an empty maximization objective function.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Maximize_1.htm">Maximize(String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an empty maximization objective function.
            This method creates an <span class="code">IObjective</span> object representing a
            maximization objective function with a zero expression.  The new
            <span class="code">IObjective</span> object is assigned <span class="code">name</span>
            as its name.  This method is typically used in an application that 
            applies column-wise modeling
            to fill in the objective function while creating the variables.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Maximize.htm">Maximize(INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IObjective</span> 
             representing an objective to maximize the expression <span class="code">expr</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Maximize_1.htm">Maximize(INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to maximize the expression 
              <span class="code">expr</span> and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Min_2.htm">Min(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntExpr<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">min(e)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Min_5.htm">Min(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumExpr<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">min(e)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Min_6.htm">Min(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">min(val, e2)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Min_7.htm">Min(Int32, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">min(val, e2)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Min.htm">Min(IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">min(e1, e2)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Min_1.htm">Min(IIntExpr, Int32)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">min(e1, val)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Min_3.htm">Min(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">min(e1, e2)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Min_4.htm">Min(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">min(e1, val)</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Minimize.htm">Minimize<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">Creates and returns an empty minimization objective function.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Minimize_1.htm">Minimize(String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an empty minimization objective function.
            This method creates and returns an <span class="code">IObjective</span> object
            representing a minimization objective function with a zero expression.
            The new <span class="code">IObjective</span> object is assigned 
            <span class="code">name</span> as its name.  This method is typically 
            used in an application that applies 
            column-wise modeling to fill in the objective function while creating the
            variables.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Minimize.htm">Minimize(INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an instance of <span class="code">IObjective</span> 
             representing an objective to minimize the expression <span class="code">expr</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Minimize_1.htm">Minimize(INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to minimize the expression 
              <span class="code">expr</span> and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Negative.htm">Negative(IIntExpr)</a>
              </td>
              <td> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Negative_1.htm">Negative(INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">-e</span>,
             the negation of the expression <span class="code">e</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Not.htm">Not(IConstraint)</a>
              </td>
              <td>
                <div class="summary">
             Returns a constraint that is the logical negation of its argument.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Not_1.htm">Not(IConstraint, String)</a>
              </td>
              <td>
                <div class="summary">
             Returns a constraint that is the logical negation of its argument 
             and assigns the string <span class="code">name</span> as the name of the
             returned constraint.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumExpr.htm">NumExpr</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an empty expression.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVar.htm">NumVar(Double, Double)</a>
              </td>
              <td>
                <div class="summary">
              Creates a new modeling variable object of the 
              type <span class="code">NumVarType.Float</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVar_1.htm">NumVar(Double, Double, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
             Creates a new numeric variable object.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVar_3.htm">NumVar(Double, Double, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates a new modeling variable of the 
              type <span class="code">NumVarType.Float</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVar.htm">NumVar(IColumn, Double, Double)</a>
              </td>
              <td>
                <div class="summary">
            Creates a continuous modeling variable, of type <span class="code">Float</span>
            with upper bound and lower bound as specified,
            for column-wise modeling.</div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVar_2.htm">NumVar(Double, Double, NumVarType, String)</a>
              </td>
              <td>
                <div class="summary">
             Creates a new modeling variable object.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVar_1.htm">NumVar(IColumn, Double, Double, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a new modeling variable for column-wise modeling.
            <p>
            This method returns an object representing a new modeling variable with
            the specified bounds and type. The newly created variable is then
            installed in existing modeling objects, as defined by the
            <span class="code">IColumn</span> argument <span class="code">column</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVar_3.htm">NumVar(IColumn, Double, Double, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates a continuous modeling variable, of type <span class="code">Float</span>
            with upper bound, lower bound, and name as specified,
            for column-wise modeling.
            <p>
            This method returns an object representing a new modeling variable of type
            <span class="code">INumVarType.Float</span> with the specified bounds and name.
            The newly created variable is then installed in existing modeling objects
            as defined by the <span class="code">IColumn</span> argument <span class="code">column</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVar_2.htm">NumVar(IColumn, Double, Double, NumVarType, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a new modeling variable with the name
            specified by <span class="code">name</span> for column-wise modeling.
            <p>
            This method returns an object representing a new modeling variable with
            the specified bounds, type, and name. The newly created variable is then
            installed in existing modeling objects, as defined by the
            <span class="code">IColumn</span> argument <span class="code">column</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVarArray.htm">NumVarArray(Int32, Double, Double)</a>
              </td>
              <td>
                <div class="summary">
              Creates an array of length <span class="code">n</span> 
              initialized to <span class="code">n</span> new modeling variables 
              of the type <span class="code">NumVarType.Float</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVarArray_4.htm">NumVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates an array of length <span class="code">n</span> 
              initialized to <span class="code">n</span> new modeling variables 
              of type <span class="code">NumVarType.Float</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVarArray.htm">NumVarArray(IColumnArray, Double, Double)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns continuous modeling variables, all of type
            <span class="code">Float</span>, all with same upper bound,  all with the same  
            lower bound, for column-wise modeling.  
            <p>
            This method creates new modeling variables of type
            <span class="code">INumVarType.Float</span>, each with the same specified bounds, and
            returns them in an array.  The number of new variables is determined by
            the size of the <span class="code">IColumnArray</span> argument <span class="code">cols</span>.
            The new variables are then installed in existing modeling objects as
            defined by the <span class="code">IColumnArray</span> argument <span class="code">cols</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVarArray_4.htm">NumVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns continuous modeling variables, all of the same
            type <span class="code">Float</span> with individually specified upper bound, and
            individually specified lower bound, for column-wise modeling.  
            <p>
            This method creates new modeling variables of type
            <span class="code">INumVarType.Float</span>, each with its own bounds, and returns
            them in an array.  The number of new variables is determined by the size
            of the <span class="code">IColumnArray</span> argument <span class="code">cols</span>.
            Variable <span class="code">i</span> is constructed with bounds <span class="code">lb[i]</span>
            and <span class="code">ub[i]</span>.  The new variables are installed in existing
            modeling objects as defined by the <span class="code">cols</span> argument.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVarArray_1.htm">NumVarArray(Int32, Double, Double, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
              Creates <span class="code">n</span> new numeric variable objects 
              and returns them in an array.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVarArray_3.htm">NumVarArray(Int32, Double, Double, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates an array of length <span class="code">n</span> 
              initialized to <span class="code">n</span> new modeling variables 
              of type <span class="code">NumVarType.Float</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVarArray_5.htm">NumVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates <span class="code">n</span> new numeric variables and 
              returns them in an array.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVarArray_7.htm">NumVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates an array of length <span class="code">n</span> 
              initialized to <span class="code">n</span> new modeling variables 
              of type <span class="code">NumVarType.Float</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVarArray_1.htm">NumVarArray(IColumnArray, Double, Double, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns modeling variables, all of the same type specified by
            <span class="code">type</span>, all with same upper bound and same lower bound 
            for column-wise modeling.
            
            <p>
            This method creates new modeling variables, each with the same specified
            bounds and type, and returns them in an array. The number of new variables
            is determined by the size of the <span class="code">IColumnArray</span> argument
            <span class="code">cols</span>. The new variables are then installed in existing
            modeling objects, as defined by the <span class="code">IColumnArray</span>
            argument <span class="code">cols</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVarArray_3.htm">NumVarArray(IColumnArray, Double, Double, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns continuous modeling variables, all of type 
            <span class="code">Float</span>, with the same specified bounds, but with
            individually specified names, for column-wise modeling. 
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVarArray_5.htm">NumVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns modeling variables with the individual
            type specified by the corresponding entry in the array 
            <span class="code">type</span>, and individual upper and lower bounds as specified
            in those arrays, for column-wise modeling.
            
            <p>
            This method creates new modeling variables, each with its own bounds and
            type, and returns them in an array.  The number of new variables is
            determined by the size of the <span class="code">IColumnArray</span> argument
            <span class="code">cols</span>.  The new variable <span class="code">i</span> is constructed
            with bounds <span class="code">lb[i]</span> and <span class="code">ub[i]</span> and type
            <span class="code">type[i]</span>. The new variables are installed in existing
            modeling objects, as defined by the <span class="code">cols</span> argument.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVarArray_7.htm">NumVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns continuous modeling variables, all of type
            <span class="code">Float</span> with individually
            specified upper bound, lower bound, and name, for column-wise
            modeling.  </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVarArray_2.htm">NumVarArray(Int32, Double, Double, NumVarType, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             Creates <span class="code">n</span> new numeric variable objects 
             and returns them in an array.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_NumVarArray_6.htm">NumVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates <span class="code">n</span> new numeric variable objects 
              and returns them in an array.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVarArray_2.htm">NumVarArray(IColumnArray, Double, Double, NumVarType, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an array of modeling variables with names  
            for column-wise modeling.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_NumVarArray_6.htm">NumVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns modeling variables with the individual
            type specified by the corresponding entry in the array 
            <span class="code">type</span>, with individual upper and lower bounds as specified
            in those arrays, with the name specified individually by the
            corresponding entry in the array <span class="code">name</span>,  
            for column-wise modeling.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Objective.htm">Objective(ObjectiveSense)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an empty objective function with the sense
            specified by <span class="code">sense</span>.
            <p>
            This method creates and returns an <span class="code">IObjective</span> object with
            a zero expression and the specified optimization sense. This 
            method is typically
            used in an application that uses column-wise modeling to fill in the
            objective function while creating the variables.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Objective.htm">Objective(ObjectiveSense, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to optimize the expression 
              <span class="code">expr</span> with respect to the
              optimization sense indicated by <span class="code">sense</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Objective_1.htm">Objective(ObjectiveSense, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an empty objective function with the sense
            specified by <span class="code">sense</span> and with the name specified by
            <span class="code">name</span>.
            <p>
            This method creates and returns an <span class="code">IObjective</span> object with
            a zero  expression and the specified optimization sense.  The new
            <span class="code">IObjective</span> object is assigned <span class="code">name</span> 
            as its name.  This method is typically used in an application that 
            applies column-wise modeling
            to fill in the objective function while creating the variables.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Objective_1.htm">Objective(ObjectiveSense, INumExpr, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IObjective</span> 
              representing an objective to optimize the expression 
              <span class="code">expr</span> with respect to the
              optimization sense indicated by <span class="code">sense</span> and 
              assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Or.htm">Or<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a>
              </td>
              <td>
                <div class="summary">
            Creates an <span class="code">IOr</span> constraint for expressing disjunctions.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Or_3.htm">Or(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             Returns an <span class="code">IOr</span> constraint indicating that at least one and possibly more than one
             of the elements is true in its argument <span class="code">cons</span>, an array
             of constraints.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Or_1.htm">Or(IConstraint, IConstraint)</a>
              </td>
              <td>
                <div class="summary">
             Returns an or-constraint indicating that at least one and possibly more
             than one argument is true.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Or_6.htm">Or(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, String)</a>
              </td>
              <td>
                <div class="summary">
             Returns an <span class="code">IOr</span> constraint indicating that at least one and 
             possibly more than one
             of the elements is true in its argument <span class="code">cons</span>, an array
             of constraints.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Or_2.htm">Or(IConstraint, IConstraint, String)</a>
              </td>
              <td>
                <div class="summary">
             Returns an or-constraint indicating that at least one and possibly both of
             its  arguments are true.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Or_4.htm">Or(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
             Returns an or-constraint indicating that at least one and 
             possibly more than one
             of the elements is true in the range of indices starting at the index
             indicated by <span class="code">start</span> and continuing through the number
             of elements indicated by the number <span class="code">num</span> among the elements
             of its argument <span class="code">cons</span>, an array of constraints.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Or_5.htm">Or(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IConstraint<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32, String)</a>
              </td>
              <td>
                <div class="summary">
             Returns an or-constraint indicating that at least one and 
             possibly more than one
             of the elements is true in the range of indices starting at the index
             indicated by <span class="code">start</span> and continuing through the number
             of elements indicated by the number <span class="code">num</span> among the elements
             of its argument <span class="code">cons</span>, an array of constraints.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_PiecewiseLinear.htm">PiecewiseLinear(INumExpr, Double, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates an expression node that represents a continuous or discontinuous piecewise linear
             function.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_PiecewiseLinear_1.htm">PiecewiseLinear(INumExpr, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Double, Double)</a>
              </td>
              <td>
                <div class="summary"> Creates an expression node that
            represents a continuous or discontinuous piecewise linear function.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_PiecewiseLinear_2.htm">PiecewiseLinear(INumExpr, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Double, Double)</a>
              </td>
              <td>
                <div class="summary"> Creates an expression node to represent
            a continuous or discontinuous piecewise linear function.
            <p>The piecewise linear function is evaluated at <span class="code">expr</span> and is
            defined by the remaining arguments.  The array <span class="code">points</span>
            contains breakpoints such that <span class="code">points[i-1]</span> is
            less than or equal to <span class="code"> points[i]</span>.
            Only <span class="code">num</span> elements starting with element
            <span class="code">startPoints</span> are considered.  The array <span class="code">slopes</span>
            contains the slope for each piece defined by the breakpoints.  Only
            <span class="code">num+1</span> elements starting with element
            <span class="code">startSlopes</span> are considered.  
            The element <span class="code">slopes[startSlopes]</span>
            specifies the slope of the piecewise linear function for values less than
            <span class="code">points[startPoints]</span>, 
            and <span class="code">slopes[startSlopes+num]</span>
            specifies the slope of the piecewise linear function for values greater
            than <span class="code">points[startPoints+num-1]</span>.  For elements in between,
            <span class="code">slopes[startSlopes+i]</span> specifies the slope between
            <span class="code">points[startPoints+i-1]</span> and
            <span class="code">points[startPoints+i]</span>.</p><p>
            By selecting 
            <span class="code">points[startPoints+i-1] == points[startPoints+i]</span>,
            you can represent 
            a discontinuous piecewise linear function.  At
            <span class="code">points[startPoints+i]</span>, it will make a step of size
            <span class="code">slope[startSlopes+i-1]</span>.
            </p><p>
            The values <span class="code">a</span> and <span class="code">fa</span> define the x and y
            coordinates of one point of the piecewise linear function.  This point is
            referred to as the anchor point.</p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod_6.htm">Prod(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the product of 
             the expression
             <span class="code">e1</span> and the value <span class="code">v</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod_8.htm">Prod(Int32, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">v * e</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod.htm">Prod(IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">e1 * e2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod_1.htm">Prod(IIntExpr, Int32)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">e * v</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod_2.htm">Prod(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the product of 
             the expressions
             <span class="code">expr1</span> and <span class="code">expr2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod_3.htm">Prod(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the product of 
             the expression
             <span class="code">e</span> and the value <span class="code">v</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod_7.htm">Prod(Double, INumVar, INumVar)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the product
             of the value <span class="code">val</span>, the variable<span class="code">var1</span>, 
             and the variable <span class="code">var2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod_4.htm">Prod(INumVar, INumVar, Double)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the product of 
             the variable<span class="code">var1</span>, 
             the variable <span class="code">var2</span>, and 
             the value <span class="code">val</span>,
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Prod_5.htm">Prod(INumVar, Double, INumVar)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the product of 
             the variable<span class="code">var1</span>,
             the value <span class="code">val</span>, 
             and the variable <span class="code">var2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Range.htm">Range(Double, Double)</a>
              </td>
              <td>
                <div class="summary">Creates and returns an empty <span class="code">IRange</span> object.</div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Range.htm">Range(Double, INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint 
              <span class="code">lb &lt;= expr &lt;= ub</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_Range_1.htm">Range(Double, Double, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an empty <span class="code">IRange</span> object with the
            name specified by <span class="code">name</span>. 
            <p>The new
            <span class="code">IRange</span> object is initialized to represent the constraint
            <span class="code">lb &lt;= 0 &lt;= ub</span>. The new <span class="code">IRange</span> object is
            assigned <span class="code">name</span> as its name. 
            This method is typically used in an application that applies 
            column-wise modeling to fill in the expression for
            the ranged constraint while creating the variables.
            </p></div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Range_1.htm">Range(Double, INumExpr, Double, String)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an instance of <span class="code">IRange</span> 
              initialized to represent the constraint 
              <span class="code">lb &lt;= expr &lt;= ub</span>
              and assigned the name <span class="code">name</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModel_Remove.htm">Remove(IAddable)</a>
              </td>
              <td>
                <div class="summary">
              This method removes the extractable object from the invoking
              model.
              </div> (Inherited from <a href="T_ILOG_Concert_IModel.htm">IModel</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModel_Remove_1.htm">Remove(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IAddable<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
             This method removes the array of extractable objects
             from the invoking model.
             </div> (Inherited from <a href="T_ILOG_Concert_IModel.htm">IModel</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModel_Remove_2.htm">Remove(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IAddable<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
             This method removes modeling objects from the invoking <span class="code">IModel</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModel.htm">IModel</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_9.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a linear expression representing 
              the scalar product of the
              provided values with the provided variables.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_11.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an integer linear expression 
              representing the scalar
              product of the provided integer values with 
              the provided integer variables.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_13.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a linear expression 
              representing the scalar product of the
              provided values with the provided variables.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a linear expression representing the scalar product
            of the provided variables.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_2.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an integer linear expression representing 
              the scalar product of the provided integer values 
              with the provided integer variables.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_4.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a linear expression representing the scalar product
            of the variables provided as arguments.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_6.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a linear expression representing 
              the scalar product of the
              provided values with the provided variables.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_8.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a linear expression 
              representing the scalar product of the
              provided values with the provided variables.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_10.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a linear expression 
              representing the scalar product of the
              values provided in <span class="code">coefs[start]...coefs[start+num-1]</span> 
              with the variables
              provided in <span class="code">vars[start]...vars[start+num-1]</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_12.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an integer linear expression representing the scalar
              product of the integer values provided in 
              <span class="code">vals[start]...vals[start+num-1]</span>
              with the integer variables provided in 
              <span class="code">vars[start]...vars[start+num-1]</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_1.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a linear expression representing the scalar product
            of the variables provided as arguments.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_3.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Int32<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns an integer linear expression representing 
              the scalar product of the integer values provided in 
              <span class="code">vals[start]...vals[start+num-1]</span>
              with the integer variables provided in 
              <span class="code">vars[start]...vars[start+num-1]</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_5.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns a linear expression representing the scalar product
             of the variables provided as arguments.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_ScalProd_7.htm">ScalProd(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
              Creates and returns a linear expression 
              representing the scalar product of the
              values provided in <span class="code">coefs[start]...coefs[start+num-1]</span> 
              with the variables
              provided in <span class="code">vars[start]...vars[start+num-1]</span>.
              </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVar_2.htm">SemiContVar(Double, Double, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a new semi-continuous modeling variable with
            a specified semi-continuous lower bound, upper bound, and type.
            <p>
            This method returns an object representing a new semi-continuous modeling
            variable with the specified bounds and type.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVar_3.htm">SemiContVar(Double, Double, NumVarType, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a new semi-continuous modeling variable with
            specified bounds, type, and name.
            <p>
            This method returns an object representing a new semi-continuous modeling
            variable with the specified bounds, type, and name.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVar.htm">SemiContVar(IColumn, Double, Double, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a new semi-continuous modeling variable 
            with specified type and bounds, for column-wise modeling. 
            
            <p>
            This method returns an object representing a new
            semi-continuous modeling variable with the specified bounds and type.
            The newly created variable is then installed in existing modeling
            objects as defined by the <span class="code">IColumn</span> argument
            <span class="code">column</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVar_1.htm">SemiContVar(IColumn, Double, Double, NumVarType, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns a new semi-continuous modeling variable, with
            specified bounds, type, and name, for column-wise modeling. 
            
            <p>
            This method returns an object representing a new
            semi-continuous modeling variable with the specified bounds, type, and
            name. The newly created variable is then installed in existing modeling
            objects as defined by the <span class="code">IColumn</span> argument
            <span class="code">column</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVarArray_4.htm">SemiContVarArray(Int32, Double, Double, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns <span class="code">n</span> semi-continuous modeling variables,
            all of the same type, with the same semi-continuous lower bound and
            upper bound.
            <p>
            This method creates <span class="code">n</span> new semi-continuous modeling
            variables, each with the same specified bounds and type, and returns them
            in an array.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVarArray_6.htm">SemiContVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns <span class="code">n</span> semi-continuous modeling variables,
            with individually specified type, semi-continuous lower bound, and 
            upper bound.
            <p>
            This method creates new semi-continuous modeling variables, each with its
            own bounds and type, and returns them in an array.  Variable
            <span class="code">i</span> is constructed with bounds <span class="code">sclb[i]</span> and
            <span class="code">ub[i]</span> and type <span class="code">type[i]</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVarArray.htm">SemiContVarArray(IColumnArray, Double, Double, NumVarType)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns semi-continuous modeling variables, all with
            the same type and bounds, for column-wise modeling. </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVarArray_2.htm">SemiContVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns semi-continuous modeling variables,
            with individually specified type, semi-continuous lower bound,
            and upper bound, for column-wise modeling. 
            
            <p>
            This method creates new semi-continuous modeling variables,
            each with its own bounds and type, and returns them in an array.  The
            number of new variables is determined by the size of the
            <span class="code">IColumnArray</span> argument <span class="code">cols</span>.  Variable
            <span class="code">i</span> is  constructed with bounds <span class="code">sclb[i]</span> and
            <span class="code">ub[i]</span> and type <span class="code">type[i]</span>. The new variables will
            be installed in existing modeling objects as defined by the
            <span class="code">cols</span> argument.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVarArray_5.htm">SemiContVarArray(Int32, Double, Double, NumVarType, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns <span class="code">n</span> semi-continuous modeling variables,
            all with the same type, semi-continuous lower bound, and upper bound, 
            but with individually specified name.
            <p>
            This method creates <span class="code">n</span> new semi-continuous modeling
            variables, each with the same specified bounds and type, and returns them
            in an array. Each new variable is assigned a separate name, with variable
            <span class="code">i</span> assigned <span class="code">name[i]</span>.
            </p></div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVarArray_7.htm">SemiContVarArray(Int32, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns <span class="code">n</span> semi-continuous modeling variables,
            all of the same type, with the same semi-continuous lower bound and
            upper bound, and individually specified name.</div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVarArray_1.htm">SemiContVarArray(IColumnArray, Double, Double, NumVarType, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns semi-continuous modeling variables 
            with individually specified type, semi-continuous lower bound, 
            upper bound, and name, for column-wise modeling. </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SemiContVarArray_3.htm">SemiContVarArray(IColumnArray, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>NumVarType<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>String<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns semi-continuous modeling variables,
            with individually specified type, semi-continuous lower bound,
            upper bound, and name, for column-wise modeling. </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoef.htm">SetLinearCoef(IObjective, INumVar, Double)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficient for variable <span class="code">var</span> to <span class="code">val</span>
            in the expression of the specified <span class="code">IObjective</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoef_1.htm">SetLinearCoef(IObjective, Double, INumVar)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficient for variable <span class="code">var</span> to <span class="code">val</span>
            in the expression of the specified <span class="code">IObjective</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoef_2.htm">SetLinearCoef(IRange, INumVar, Double)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficient for variable <span class="code">var</span> to <span class="code">val</span>
            in the expression of the specified <span class="code">IRange</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoef_3.htm">SetLinearCoef(IRange, Double, INumVar)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficient for variable <span class="code">var</span> to <span class="code">val</span>
            in the expression of the specified <span class="code">IRange</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoefs.htm">SetLinearCoefs(IObjective, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficients for variables in the expression of the specified
            <span class="code">IObjective</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoefs_2.htm">SetLinearCoefs(IObjective, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficients for variables in the expression of the specified
            <span class="code">IObjective</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoefs_4.htm">SetLinearCoefs(IRange, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficients for variables in the expression of the specified
            <span class="code">IRange</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoefs_6.htm">SetLinearCoefs(IRange, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficients for variables in the expression of the specified
            <span class="code">IRange</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoefs_1.htm">SetLinearCoefs(IObjective, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficients for variables in the expression of the specified
            <span class="code">IObjective</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoefs_3.htm">SetLinearCoefs(IObjective, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficients for variables in the expression of the specified
            <span class="code">IObjective</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoefs_5.htm">SetLinearCoefs(IRange, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary"> Sets linear coefficients for variables in the expression of the specified
            <span class="code">IRange</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SetLinearCoefs_7.htm">SetLinearCoefs(IRange, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Sets linear coefficients for variables in the expression of the specified
            <span class="code">IRange</span> object.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SOS1.htm">SOS1(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 1 with the specified variables and weights. 
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SOS1_3.htm">SOS1(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 1 with the specified variables and weights, and
            assigns the new SOS its <span class="code">name</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SOS1_1.htm">SOS1(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 1 with the <span class="code">num</span> 
            specified variables and weights, starting from the index specified
            by <span class="code">start</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SOS1_2.htm">SOS1(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 1 with the <span class="code">num</span> 
            specified variables and weights, starting from the index specified
            by <span class="code">start</span>, and assigns the new SOS a name.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SOS2.htm">SOS2(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 2 with the specified variables and weights. 
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SOS2_3.htm">SOS2(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 2 with the specified variables and weights, and
            assigns the new SOS its <span class="code">name</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SOS2_1.htm">SOS2(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 2 with the <span class="code">num</span> 
            specified variables and weights, starting from the index specified
            by <span class="code">start</span>.
            </div>
              </td>
            </tr>
            <tr data="public;declared;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IMPModeler_SOS2_2.htm">SOS2(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumVar<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Double<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32, String)</a>
              </td>
              <td>
                <div class="summary">
            Creates an SOS of type 2 with the <span class="code">num</span> 
            specified variables and weights, starting from the index specified by
            <span class="code">start</span>, and assigns 
            the new SOS its <span class="code">name</span>.
            </div>
              </td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Square.htm">Square(IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns the new expression <span class="code">e^2</span>.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Square_1.htm">Square(INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an expression representing the 
             square of the expression
             <span class="code">e</span> (that is, <span class="code">e * e</span>).
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_8.htm">Sum(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntExpr<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an integer expression representing the sum of
            the expressions provided in the array <span class="code">expr</span>.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_18.htm">Sum(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumExpr<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an expression representing the sum of
            the expressions provided as terms in the array <span class="code">expr</span>.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_20.htm">Sum(Double, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an expression representing the
             sum of a value and a numeric expression.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_21.htm">Sum(Int32, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an integer expression representing the sum of
             a value and an integer expression.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum.htm">Sum(IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds two integer expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_7.htm">Sum(IIntExpr, Int32)</a>
              </td>
              <td>
                <div class="summary">
             Creates and returns an integer expression representing the sum of
             an integer expression and a value.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_10.htm">Sum(INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds two numeric expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_17.htm">Sum(INumExpr, Double)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an expression representing the
             sum of a numeric expression and a value.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_1.htm">Sum(IIntExpr, IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds three integer expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_9.htm">Sum(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>IIntExpr<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an integer expression representing the sum of
            the <span class="code">num</span> expressions provided in the array <span class="code">expr</span>
            starting with element <span class="code">start</span>.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_11.htm">Sum(INumExpr, INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds three numeric expressions and returns their sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_19.htm">Sum(<span class="languageSpecificText"><span class="cpp">array&lt;</span></span>INumExpr<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Int32, Int32)</a>
              </td>
              <td>
                <div class="summary">
            Creates and returns an expression representing the sum of
            the <span class="code">num</span> expressions provided as terms 
            in the array <span class="code">expr</span>
            starting with element <span class="code">start</span>.
            </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_2.htm">Sum(IIntExpr, IIntExpr, IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds four integer expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_12.htm">Sum(INumExpr, INumExpr, INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds four numeric expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_3.htm">Sum(IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds five integer expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_13.htm">Sum(INumExpr, INumExpr, INumExpr, INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds five numeric expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_4.htm">Sum(IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds six integer expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_14.htm">Sum(INumExpr, INumExpr, INumExpr, INumExpr, INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds six numeric expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_5.htm">Sum(IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds seven integer expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_15.htm">Sum(INumExpr, INumExpr, INumExpr, INumExpr, INumExpr, INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds seven numeric expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_6.htm">Sum(IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr, IIntExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds eight integer expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_IModeler_Sum_16.htm">Sum(INumExpr, INumExpr, INumExpr, INumExpr, INumExpr, INumExpr, INumExpr, INumExpr)</a>
              </td>
              <td>
                <div class="summary">
             Adds eight numeric expressions and returns the sum.
             </div> (Inherited from <a href="T_ILOG_Concert_IModeler.htm">IModeler</a>.)</td>
            </tr>
            <tr data="public;inherited;notNetfw;">
              <td>
                <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
              </td>
              <td>
                <a href="M_ILOG_Concert_ICopyable_VisitChildren.htm">VisitChildren</a>
              </td>
              <td>
                <div class="summary">
            This method is called when the object and all its sub-objects must be
            visited. To implement this method, you should first call the method
            <span class="code">ICopyableVisitor.BeginVisit()</span> with yourself as parameter,
            then call <span class="code">ICopyableVisitor.VisitChild()</span> for each
            sub-copyables, the call <span class="code">ICopyableVisitor.EndVisit()</span> once
            again with yourself as parameter.
            </div> (Inherited from <a href="T_ILOG_Concert_ICopyable.htm">ICopyable</a>.)</td>
            </tr>
          </table>
        </div>
        <h1 class="heading">See Also</h1>
        <div id="seeAlsoSection" class="section" name="collapseableSection" style="">
          <div class="seeAlsoStyle">
            <a href="T_ILOG_Concert_IMPModeler.htm">IMPModeler Interface</a>
          </div>
          <div class="seeAlsoStyle">
            <a href="N_ILOG_Concert.htm">ILOG.Concert Namespace</a>
          </div>
        </div>
      </div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
        </div>
        <A NAME="feedback"></A>
        <span id="fb" class="feedbackcss"></span>
        <p />© Copyright IBM Corp. 1987, 2015</div>
    </div>
  </body>
</html>